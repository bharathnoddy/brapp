version: 0.2
phases:
  install: # Install AWS cli, kubectl (needed for Helm) and Helm
    commands:
       - apt install -y awscli git python3
       - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
       - chmod +x ./aws-iam-authenticator
       - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
       - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3;chmod 700 get_helm.sh;./get_helm.sh
       - chmod +x kubectl
       - mv ./kubectl /usr/local/bin/kubectl
       - wget https://storage.googleapis.com/kubernetes-helm/helm-v3.1.1-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz
       - chmod +x ./linux-amd64/helm
       - mv ./linux-amd64/helm /usr/local/bin/helm
  pre_build: # Add kubeconfig to access to EKS cluster
    commands:
      - ls
      - aws eks update-kubeconfig --name bharath-codetest-cluster --role-arn arn:aws:iam::673377339958:role/terraform
  build: # Build Docker image and tag it with the commit sha
    commands:
      - docker build . -t $imagerepo:$CODEBUILD_RESOLVED_SOURCE_VERSION -f app/Dockerfile
      - docker tag $imagerepo:$CODEBUILD_RESOLVED_SOURCE_VERSION 673377339958.dkr.ecr.eu-west-1.amazonaws.com/$imagerepo:$CODEBUILD_RESOLVED_SOURCE_VERSION
  post_build: # Push the Docker image to the ECR
    commands:
      - $(aws ecr get-login --no-include-email --region eu-west-1)
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - "helm upgrade -i brapp  brapp --set image.imageTag =$CODEBUILD_RESOLVED_SOURCE_VERSION"
